========================================
How to use the module ``4-print_square``
========================================

This module prints a square with the character #


Usage
=====

==> This module uses the prototype ``def print_square(size)``. The size is the
length of the square.

==> If size is not integer or size is a float and less than 0, raise a
TypeError exception.

==> If size is less than 0, raise a ValueError exception.


Importing a module
	>>> print_square = __import__('4-print_square').print_square

Tests:

case 1: when size is positive number
	>>> print_square(3)
	###
	###
	###

case 2: when size is zero
	>>> print_square(0)
	>>>

case 3: when size is negative number
	>>> print_square(-15)
	Traceback (most recent call last):
	ValueError: size must be >= 0

case 4: when size is float number
	>>> print_square(6.4)
	Traceback (most recent call last):
	TypeError: size must be an integer

case 5: when size is string
	>>> print_square('Hello')
	Traceback (most recent call last):
	TypeError: size must be an integer
	>>> print_square(-2)
	Traceback (most recent call last):
	ValueError: size must be >= 0

case 6: when missing argument
	>>> print_square()
	Traceback (most recent call last):
	TypeError: print_square() missing 1 required positional argument: 'size'

==============================================================================
