=====================================
How to use ``100-matrix_mul`` module
=====================================

This module multiplies 2 matrices.

usage
=====

Importing function
>>> lazy_matrix_mul = __import__('101-lazy_matrix_mul').lazy_matrix_mul

Tests

case 1: Passing matrices
	>>> lazy_matrix_mul([[1, 2], [3, 4]], [[1, 2], [3, 4]])
	array([[ 7, 10],
	       [15, 22]])

case 2: Passing unequal matrices(matrix_1 is 2x2, and matrix_2 is 2x3)
	>>> lazy_matrix_mul([[2, 3], [4, 7]], [[3, 5, 6], [4, 6, 8]])
	array([[18, 28, 36],
	       [40, 62, 80]])

case 3: Passing unequal matrices(matrix_1 is 2x2, and matrix_2 is 3x2)
	>>> lazy_matrix_mul([[2, 3], [4, 7]], [[3, 5], [4, 6], [5, 9]])
	Traceback (most recent call last):
	ValueError: shapes (2,2) and (3,2) not aligned: 2 (dim 1) != 3 (dim 0)

case 4: Either argument is none or missed.
	>>> lazy_matrix_mul([[1, 2], [3, 4]], [[]])
	Traceback (most recent call last):
	ValueError: shapes (2,2) and (1,0) not aligned: 2 (dim 1) != 1 (dim 0)

	>>> lazy_matrix_mul([[1, 2], [3, 4]])
	Traceback (most recent call last):
	TypeError: lazy_matrix_mul() missing 1 required positional argument: 'm_b'

case 5: Both arguments are empty.
	>>> lazy_matrix_mul([[]], [[]])
	Traceback (most recent call last):
	ValueError: shapes (1,0) and (1,0) not aligned: 0 (dim 1) != 1 (dim 0)
	
case 6: passing one of list of lists as tuple instead of list or something else.
	>>> lazy_matrix_mul([[1, 2], [3, 4]], ([1, 2], [3, 4]))
	array([[ 7, 10],
	       [15, 22]])

	>>> lazy_matrix_mul("hello", [[4, 5], 5, 8])
	Traceback (most recent call last):
	ValueError: setting an array element with a sequence

case 7: checking for list of lists.
	>>> lazy_matrix_mul([[1, 2], {3, 4}], [[1, 2], [3, 4]])
	Traceback (most recent call last):
	TypeError: unsupported operand type(s) for *: 'set' and 'int'

	>>> lazy_matrix_mul([[6, 8], [2, 5]], [1, 2, 3, 4])
	Traceback (most recent call last):
	ValueError: shapes (2,2) and (4,) not aligned: 2 (dim 1) != 4 (dim 0)

case 8: checking with float numbers.
	>>> lazy_matrix_mul([[1, 2], [3.5433, 4]], [[1.5, 2], [3, 4.6]])
	array([[ 7.5    , 11.2    ],
	       [17.31495, 25.4866 ]])


case 9: if one element of those list of lists is not an integer or a float
	>>> lazy_matrix_mul([["k", 2], [3, 4]], [[1, 2], [3, 4]])
	Traceback (most recent call last):
	ValueError: data type must provide an itemsize

case 11: missing two arguments
	>>> lazy_matrix_mul()
	Traceback (most recent call last):
	TypeError: lazy_matrix_mul() missing 2 required positional arguments: 'm_a' and 'm_b'

=================================================================================
